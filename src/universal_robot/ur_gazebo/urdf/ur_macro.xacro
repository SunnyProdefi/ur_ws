<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <!--
    "Gazebo机器人"模型的主要xacro宏定义。
    这个宏包装了真实机器人的模型，并添加了Gazebo所需的所有元素和参数。
    它还添加了gazebo_ros_control插件。
    注意：这不是一个URDF文件。它不能直接被期望加载扁平化的'.urdf'文件的使用者所使用。请参考顶级的'.xacro'文件（但请注意：该.xacro仍然必须通过xacro命令进行处理）。
    用于'.launch'文件的使用：使用其中一个'load_urX.launch'方便的启动文件。
    注意：这个Gazebo模型使用与主xacro宏（在ur_description中）相同的一组参数文件。因此，可以使用从真实UR机器人导出的运动学校准。有关此信息，请参阅ur_description中的ur_macro.xacro。
    迁移到yaml配置的主要作者：Ludovic Delval。
    贡献者（按无特定顺序）：
     - Felix Messmer
     - Kelsey Hawkins
     - Shaun Edwards
     - Alexander Bubeck
     - Nadia Hammoudeh Garcia
     - G. vd. Hoorn
     - Dave Niewinski
     - Andy Zelenak
     - Miguel Prada
     - Mathias Luedtke
     - Hans-Joachim Krauch
     - Felix Exner
  -->


  <!-- 主宏定义 -->
  <xacro:macro name="ur_robot_gazebo" params="
   prefix
   joint_limits_parameters_file
   kinematics_parameters_file
   physical_parameters_file
   visual_parameters_file
   transmission_hw_interface:=hardware_interface/EffortJointInterface
   safety_limits:=false safety_pos_margin:=0.15 safety_k_position:=20"
  >
  <!--
    导入REAL机器人的xacro宏（我们将在下面的包装器宏中用Gazebo特定元素来增强它）。
    注意：这里从ur_description导入了'_macro.xacro'，因为它包含了真实机器人的定义。
  -->
  <xacro:include filename="$(find ur_description)/urdf/inc/ur_macro.xacro"/>


    <!-- 实例化真实机器人的模型。 -->
    <xacro:ur_robot
      prefix="${prefix}"
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"
      transmission_hw_interface="${transmission_hw_interface}"
      safety_limits="${safety_limits}"
      safety_pos_margin="${safety_pos_margin}"
      safety_k_position="${safety_k_position}"
    />

    <!-- 配置每个链接的自碰撞属性 -->
    <gazebo reference="${prefix}shoulder_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}upper_arm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}forearm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_1_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_3_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}wrist_2_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="${prefix}ee_link">
      <selfCollide>true</selfCollide>
    </gazebo>

    <!--
      注入Gazebo ROS Control插件，它允许我们使用ros_control
      控制器来控制虚拟机器人硬件。
    -->
    <gazebo>
      <plugin name="ros_control" filename="libgazebo_ros_control.so">
        <!--robotNamespace>/</robotNamespace-->
        <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
      </plugin>
    </gazebo>
  </xacro:macro>
</robot>
